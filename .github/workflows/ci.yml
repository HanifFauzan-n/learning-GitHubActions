name: CI/CD pipeline

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: ["main"]

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        services:
          postgre:
            image: postgres:15
            env: 
              POSTGRES_USER: 'postgres'
              POSTGRES_PASSWORD: 'trNXYmebzvybLcvFekXpTWvZyHQUaCBP'
              POSTGRES_DB: 'test_db'

            ports:
              - 5432:5432

            options: >-
              --health-cmd "pg_isready -h 127.0.0.1 -p 5432 -U postgres -d test_db"
              --health-interval 10s
              --health-timeout 5s
              --health-retries 10
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with: 
                node-version: '20'

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                version: 9

            - name: Install Depedencies
              run: pnpm install --frozen-lockfile

            - name: Testing (Jest)
              run: pnpm test
              env: 
                NODE_ENV: 'test'
                DB_HOST: '127.0.0.1'
                DB_PORT: 5432
                DB_USER: 'postgres'
                DB_PASSWORD: 'trNXYmebzvybLcvFekXpTWvZyHQUaCBP'
                DB_NAME: 'test_db'

    deploy:
        needs: build-and-test
        if: github.ref == 'refs/heads/main'
        permissions:
            contents: read
            pages: write
            id-token: write

        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with: 
                path: '.'
            
            - name: Deploy to Github Pages
              id: deployment
              uses: actions/deploy-pages@v4

